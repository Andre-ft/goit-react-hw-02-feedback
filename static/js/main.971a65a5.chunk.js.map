{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/changePropName.js","components/Statistics/Statistics.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","App.js","index.js","components/Statistics/Statistics.module.css","components/Notification/Notification.module.css"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","stateKeys","Object","keys","className","s","list","map","key","id","list__item","type","list__btn","onClick","changePropName","propName","char","toUpperCase","toLowerCase","join","Statistics","props","prop","item","Section","title","children","Notification","message","role","App","state","good","neutral","bad","countFeedback","stateKey","setState","values","this","reduce","acc","Math","round","totalFeedbacks","countTotalFeedback","positivFeedbackPercent","countPositiveFeedbackPercentage","isNaN","parseInt","total","positiveFeedback","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yKACAA,EAAOC,QAAU,CAAC,WAAa,oCAAoC,KAAO,8BAA8B,UAAY,qC,+ICiCrGC,MA9Bf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAC5BC,EAAYC,OAAOC,KAAKJ,GAC9B,OACE,mCACE,oBAAIK,UAAWC,IAAEC,KAAjB,SACGL,EAAUM,KAAI,SAACC,EAAKC,GAAN,OACb,oBAAIL,UAAWC,IAAEK,WAAjB,SACE,wBACEC,KAAK,SACLP,UAAWC,IAAEO,UACbC,QAAS,kBAAMb,EAAgBQ,IAHjC,SAKGA,KAN6BC,W,wBCF7BK,MARf,SAAwBC,GACtB,OAAO,YAAIA,GACRR,KAAI,SAAAS,GACH,OAAOA,IAASA,EAAKC,cAAd,WAAkCD,EAAKE,eAAkBF,KAEjEG,KAAK,KC4BKC,EA5BI,SAAAC,GAEjB,IAAMpB,EAAYC,OAAOC,KAAKkB,GAC9B,OACE,oBAAIjB,UAAWC,IAAEC,KAAjB,SACGL,EAAUM,KAAI,SAAAe,GACb,IAAMP,EAAWD,EAAeQ,GAEhC,OACE,qBAAelB,UAAWC,IAAEkB,KAA5B,UACGR,EADH,KACeM,EAAMC,KADZA,SCMJE,MAlBf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,gCACGD,GAAS,6BAAKA,IACdC,M,gBCSQC,MAZf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OACE,mBAAGC,KAAK,QAAQzB,UAAWC,IAAEuB,QAA7B,SACGA,KCCDE,G,kNACJC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPC,cAAgB,SAAAC,GAAQ,OACtB,EAAKC,SAAL,eAAiBD,EAAW,EAAKL,MAAMK,GAAY,K,wDAGrD,WACE,OAAOlC,OAAOoC,OAAOC,KAAKR,OAAOS,QAAO,SAACC,EAAKlB,GAAN,OAAekB,EAAMlB,IAAM,K,6CAGrE,WACE,MAA+BgB,KAAKR,MAA5BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OAAOQ,KAAKC,MAAOX,GAAQA,EAAOC,EAAUC,GAAQ,KAAO,M,oBAG7D,WACE,IAAMU,EAAiBL,KAAKM,qBACtBC,EAAyBP,KAAKQ,kCAEpC,OACE,sBAAK3C,UAAU,MAAf,UACE,cAAC,EAAD,CAASqB,MAAM,wBAAf,SACE,cAAC,EAAD,CACE1B,QAASwC,KAAKR,MACd/B,gBAAiBuC,KAAKJ,kBAI1B,cAAC,EAAD,CAASV,MAAM,aAAf,SACIuB,MAAMC,SAASH,IASf,cAAC,EAAD,CAAclB,QAAQ,yBARtB,cAAC,EAAD,CACEI,KAAMO,KAAKR,MAAMC,KACjBC,QAASM,KAAKR,MAAME,QACpBC,IAAKK,KAAKR,MAAMG,IAChBgB,MAAON,EACPO,iBAAkBL,a,GAxCdM,cAmDHtB,ICrDfuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1B7D,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,kBCAzDD,EAAOC,QAAU,CAAC,QAAU,iC","file":"static/js/main.971a65a5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list__item\":\"FeedbackOptions_list__item__2XE5U\",\"list\":\"FeedbackOptions_list__y1e1E\",\"list__btn\":\"FeedbackOptions_list__btn__P5h0K\"};","import React from 'react';\nimport s from './FeedbackOptions.module.css';\nimport PropTypes from 'prop-types';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  const stateKeys = Object.keys(options);\n  return (\n    <>\n      <ul className={s.list}>\n        {stateKeys.map((key, id) => (\n          <li className={s.list__item} key={id}>\n            <button\n              type=\"button\"\n              className={s.list__btn}\n              onClick={() => onLeaveFeedback(key)}\n            >\n              {key}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.shape({\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n  }),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","function changePropName(propName) {\n  return [...propName]\n    .map(char => {\n      return char === char.toUpperCase() ? ` ${char.toLowerCase()}` : char;\n    })\n    .join('');\n}\n\nexport default changePropName;\n","import React from 'react';\nimport s from './Statistics.module.css';\nimport PropTypes from 'prop-types';\nimport changePropName from './changePropName';\n\nconst Statistics = props => {\n  // console.log('props', props);\n  const stateKeys = Object.keys(props);\n  return (\n    <ul className={s.list}>\n      {stateKeys.map(prop => {\n        const propName = changePropName(prop);\n\n        return (\n          <li key={prop} className={s.item}>\n            {propName}: {props[prop]}\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nStatistics.propTypes = {\n  props: PropTypes.shape({\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired,\n    positiveFeedback: PropTypes.number.isRequired,\n  }),\n};\n\nexport default Statistics;\n","import Proptypes from 'prop-types';\n\nfunction Section({ title, children }) {\n  return (\n    <div>\n      {title && <h2>{title}</h2>}\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: Proptypes.string,\n};\n\nSection.propTypes = {\n  title: Proptypes.string.isRequired,\n  children: Proptypes.node.isRequired,\n};\n\nexport default Section;\n","import s from './Notification.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Notification({ message }) {\n  return (\n    <p role=\"alert\" className={s.message}>\n      {message}\n    </p>\n  );\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\nimport Section from './components/Section';\nimport Notification from './components/Notification';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countFeedback = stateKey =>\n    this.setState({ [stateKey]: this.state[stateKey] + 1 });\n  // this.setState(prevState => (prevState[stateKey] += 1));\n\n  countTotalFeedback() {\n    return Object.values(this.state).reduce((acc, item) => acc + item, 0);\n  }\n\n  countPositiveFeedbackPercentage() {\n    const { good, neutral, bad } = this.state;\n    return Math.round((good / (good + neutral + bad)) * 100) + '%';\n  }\n\n  render() {\n    const totalFeedbacks = this.countTotalFeedback();\n    const positivFeedbackPercent = this.countPositiveFeedbackPercentage();\n\n    return (\n      <div className=\"App\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.countFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {!isNaN(parseInt(positivFeedbackPercent)) ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={totalFeedbacks}\n              positiveFeedback={positivFeedbackPercent}\n            />\n          ) : (\n            <Notification message=\"There is no feedback\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Statistics_item__1jVk3\",\"list\":\"Statistics_list__cKwVH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__1hnDw\"};"],"sourceRoot":""}